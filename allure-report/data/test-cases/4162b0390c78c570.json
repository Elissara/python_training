{
  "uid" : "4162b0390c78c570",
  "name" : "test_add_group[None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "8b5850ea36f662548cc975a28112c9ba",
  "time" : {
    "start" : 1618426127947,
    "stop" : 1618426129975,
    "duration" : 2028
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [159:Test_nam...w_footer, ...] == [159:Test_nam...w_footer, ...]\n  Left contains one more item: None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x000001BE2B976970>, db = <fixture.db.DbFixture object at 0x000001BE2B976A00>, json_groups = None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n            group = json_groups\n            with allure.step('Given a group list'):\n                    old_groups = db.get_group_list()\n            with allure.step('When I add a group %s to the list' %group):\n                    app.group.create(group)\n            with allure.step('When I add a group %s to the list' % group):\n                    new_groups = db.get_group_list()\n            with allure.step('Then the new group list is equal to the old list with added group'):\n                    old_groups.append(group)\n>                   assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE                   AssertionError: assert [159:Test_nam...w_footer, ...] == [159:Test_nam...w_footer, ...]\nE                     Left contains one more item: None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=\nE                     Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1618426084566,
      "stop" : 1618426084580,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1618426084566,
      "stop" : 1618426084566,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "app",
    "time" : {
      "start" : 1618426127810,
      "stop" : 1618426127946,
      "duration" : 136
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1618426127946,
      "stop" : 1618426127946,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [159:Test_nam...w_footer, ...] == [159:Test_nam...w_footer, ...]\n  Left contains one more item: None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x000001BE2B976970>, db = <fixture.db.DbFixture object at 0x000001BE2B976A00>, json_groups = None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n            group = json_groups\n            with allure.step('Given a group list'):\n                    old_groups = db.get_group_list()\n            with allure.step('When I add a group %s to the list' %group):\n                    app.group.create(group)\n            with allure.step('When I add a group %s to the list' % group):\n                    new_groups = db.get_group_list()\n            with allure.step('Then the new group list is equal to the old list with added group'):\n                    old_groups.append(group)\n>                   assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE                   AssertionError: assert [159:Test_nam...w_footer, ...] == [159:Test_nam...w_footer, ...]\nE                     Left contains one more item: None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=\nE                     Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1618426127947,
        "stop" : 1618426127948,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "When I add a group None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c= to the list",
      "time" : {
        "start" : 1618426127948,
        "stop" : 1618426129940,
        "duration" : 1992
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "When I add a group None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c= to the list",
      "time" : {
        "start" : 1618426129940,
        "stop" : 1618426129944,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "Then the new group list is equal to the old list with added group",
      "time" : {
        "start" : 1618426129944,
        "stop" : 1618426129945,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [159:Test_nam...w_footer, ...] == [159:Test_nam...w_footer, ...]\n  Left contains one more item: None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\user\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ {
    "name" : "db::fin",
    "time" : {
      "start" : 1618426140273,
      "stop" : 1618426140274,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop::fin",
    "time" : {
      "start" : 1618426140275,
      "stop" : 1618426145809,
      "duration" : 5534
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "DESKTOP-6DEV9MC"
  }, {
    "name" : "thread",
    "value" : "14832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c="
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4162b0390c78c570.json",
  "parameterValues" : [ "None:name(x$fk#_.e:header'g.WfD S Q:footer0r4A^c=" ]
}